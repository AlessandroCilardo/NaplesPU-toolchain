//===-- NaplesPUSubtarget.h - Define Subtarget for the NaplesPU -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the NaplesPU specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_NAPLESPU_NAPLESPUSUBTARGET_H
#define LLVM_LIB_TARGET_NAPLESPU_NAPLESPUSUBTARGET_H

#include "NaplesPUFrameLowering.h"
#include "NaplesPUISelLowering.h"
#include "NaplesPUInstrInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/IR/DataLayout.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "NaplesPUGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

// TODO: 1) mancano itinerari; 
// 2) getAdjustedFrameSize commentato 
// 3) enableMachineScheduler e manca enablePostRAScheduler
class NaplesPUSubtarget : public NaplesPUGenSubtargetInfo {
  virtual void anchor();

  std::unique_ptr<const NaplesPUInstrInfo> InstrInfo;
  NaplesPUFrameLowering FrameLowering;
  std::unique_ptr<const NaplesPUTargetLowering> TLInfo;
  SelectionDAGTargetInfo TSInfo;

public:
  NaplesPUSubtarget(const Triple &TT, const std::string &CPU,
                 const std::string &FS, const NaplesPUTargetMachine &TM);

  const NaplesPUInstrInfo *getInstrInfo() const override {
    return InstrInfo.get();
  }
  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const NaplesPURegisterInfo *getRegisterInfo() const override {
    return &InstrInfo->getRegisterInfo();
  }
  const NaplesPUTargetLowering *getTargetLowering() const override {
    return TLInfo.get();
  }
  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  //bool enableMachineScheduler() const override;

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);

  /// Given a actual stack size as determined by FrameInfo, this function
  /// returns adjusted framesize which includes space for register window
  /// spills and arguments.
  //int getAdjustedFrameSize(int stackSize) const;
};

} // end namespace llvm

#endif
